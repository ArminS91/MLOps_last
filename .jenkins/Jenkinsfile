pipeline {
  agent any

  environment {
    AWS_REGION      = "eu-central-1"                          // Your AWS region
    AWS_ACCOUNT_ID  = "725537514809"                          // Your AWS account ID
    ECR_REPO_NAME   = "mllast"                         // Your ECR repo name
    ECR_REGISTRY    = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
    ECR_REPOSITORY  = "${ECR_REGISTRY}/${ECR_REPO_NAME}:latest"
  }

  stages {
    stage('Continuous Integration') {
      steps {
        echo "Linting repository"
        echo "Running unit tests"
      }
    }

    stage('Login to ECR') {
      steps {
        withCredentials([[$class: 'AmazonWebServicesCredentialsBinding',
                          credentialsId: 'aws-creds']]) {
          sh '''
            aws ecr get-login-password --region $AWS_REGION \
              | docker login --username AWS --password-stdin $ECR_REGISTRY
          '''
        }
      }
    }

    stage('Build Docker Image') {
      steps {
        sh 'docker build -t $ECR_REPOSITORY .'
      }
    }

    stage('Push Docker Image') {
      steps {
        sh 'docker push $ECR_REPOSITORY'
      }
    }

stage('Continuous Deployment') {
  steps {
    sshagent(['ssh_key']) {
      sh """
        ssh -o StrictHostKeyChecking=no ubuntu@35.158.102.247 "
          cd /home/ubuntu/ &&
          wget -O docker-compose.yml https://raw.githubusercontent.com/ArminS91/MLOps_last/refs/heads/main/docker-compose.yml &&
          export IMAGE_NAME=${ECR_REPOSITORY} &&
          aws ecr get-login-password --region ${AWS_REGION} \
            | docker login --username AWS --password-stdin ${ECR_REGISTRY} &&
          docker compose up -d
        "
      """
    }
  }

}
}

  post {
    always {
      sh 'docker system prune -f'
    }
  }
}
